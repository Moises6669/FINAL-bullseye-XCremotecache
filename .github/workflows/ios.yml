name: ios-community

on:
  [workflow_dispatch,pull_request]
  
jobs:
  build-and-test:
    runs-on: macos
    steps: 
      - name: Checkout
        uses: actions/checkout@v2.4.0
        with:
           repository: "WW-Digital/ios-community"
           ref: develop
           ssh-key: ${{ secrets.ssh_ww }}
      
      - name: Install dependencies in Gemfile
        run: bundle install
     
      - name: set up ENV variables, and .env file for cocoapods-keys
        run: |
          git clone git@github.com:WW-Digital/ios-common-config.git
          touch .bash_env
          export BASH_ENV="$PWD/.bash_env"
          bash ./ios-common-config/circleci/fetch-keys.sh WWMobile ./Example
          source .bash_env
        env:
            TRIGGER_OIDC_CURL_USER: ${{ secrets.TRIGGER_OIDC_CURL_USER }}
            TRIGGER_OIDC_CURL_PASSWORD: ${{ secrets.TRIGGER_OIDC_CURL_PASSWORD }}
            TRIGGER_OIDC_CURL_SERVICE_ACCOUNT: ${{ secrets.TRIGGER_OIDC_CURL_SERVICE_ACCOUNT }}
      
      - name : Runs pod update
        run: |
           cd Example
           bundle exec pod install
           
      - name: Setup Code Climate test-reporter
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-darwin-amd64 >./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build

      - name: run unit tests and generate report
        continue-on-error: true
        run: bundle exec fastlane test
      
      - name: Code Climate post-build
        run: |
          ./cc-test-reporter after-build --exit-code $?
        env: 
           CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        if: always()
        
      - name: Danger
        run: bundle exec danger --verbose
        if: always()
        
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: "scan"
          path: output/scan/**/*
