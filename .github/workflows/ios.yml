env:
  CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
  TRIGGER_OIDC_CURL_USER: ${{ secrets.TRIGGER_OIDC_CURL_USER }}
  TRIGGER_OIDC_CURL_PASSWORD: ${{ secrets.TRIGGER_OIDC_CURL_PASSWORD }}
  TRIGGER_OIDC_CURL_SERVICE_ACCOUNT: ${{ secrets.TRIGGER_OIDC_CURL_SERVICE_ACCOUNT }}
  MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
  
name: ios-rewards
on:
  workflow_dispatch:
    inputs:
      REPO_NAME:
        description: 'REPO_NAME'
        #required: true
      BRANCH_NAME:
        description : 'BRANCH_NAME'
        #required: true
      RELEASE_TYPE:
        description: 'RELEASE_TYPE'
        #required: true
      BUMP_PODFILE:
        description: 'BUMP_PODFILE'
        #required: true
      MERGE_TO_MASTER: 
        description: 'MERGE_TO_MASTER'
        #required: true
      SEND_SLACK_MSG:
        description: 'SEND_SLACK_MSG'
        #required: true
      RUN_STEP:
        description: 'RUN_STEP'
      RUN_BUILD_TEST:
        description: 'RUN_BUILD_TEST'
        default: 'true'
      
jobs:
  build-and-test:
    runs-on: macos
    steps: 
      - name: Checkout
        uses: actions/checkout@v2
       
      - name: "Build and test"
        run: |
          source scripts/fetch_keys.sh
          bash scripts/install_dependencies.sh
          bash scripts/test.sh
        if: ${{ github.event.inputs.RUN_BUILD_TEST != 'false' && github.event.inputs.RUN_STEP == null }} 
    
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: "scan"
          path: output/scan/**/*
        if: ${{ github.event.inputs.RUN_BUILD_TEST != 'false' && github.event.inputs.RUN_STEP == null }} 

      
  publish-pod:
     runs-on: macos
     steps: 
       - name: Checkout
         uses: actions/checkout@v2

       - name: "Publish Pod"
         run: |
           source scripts/fetch_keys.sh
           bash scripts/install_dependencies.sh
           bundle exec fastlane publish_pod_ci
         if: ${{ github.event.inputs.RUN_STEP == 'publish-pod' }}
